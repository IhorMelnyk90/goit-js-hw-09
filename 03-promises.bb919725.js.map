{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAkCjC,SAASI,EAAcC,EAAUJ,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAS,SAACC,EAASC,GAC9BC,YAAW,WACNN,EACDI,EAAQ,CAACL,WAAUJ,UAEnBU,EAAO,CAACN,WAAUJ,S,GAEnBA,E,IAjCLJ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAMC,iBAKN,IAJA,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OACxBhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAEzBC,EAAW,EAAGA,GAAYhB,EAAQgB,IACzCf,EAAce,EAAUH,GAOvBI,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MACjBqB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,IACrEyB,OAAI,SAAAL,G,IAAGhB,EAAQgB,EAARhB,SAAUJ,EAAKoB,EAALpB,MAClBqB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAqCF,OAAfpB,EAAS,QAAYoB,OAANxB,EAAM,M,IACrEe,GAASd,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst notifyOptions = {\n  cssAnimationStyle: 'from-top',\n  clickToClose: true,\n  timeout: 5000,\n  showOnlyTheLastOne: false,\n};\n\nrefs.form.addEventListener('submit', onSubmitBtn);\n\nfunction onSubmitBtn(event) {\n  event.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let position = 1; position <= amount; position ++) {\n    createPromise(position, delay)\n    // .then(({ position, delay }) => {\n    //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    // })\n    // .catch(({ position, delay }) => {\n    //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    // });\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`,)})\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`,)})\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise ((resolve, reject) => {\n  setTimeout(() => {\n    if(shouldResolve) {\n      resolve({position, delay})\n    } else {\n      reject({position, delay});\n    }\n  }, delay);\n }); \n};\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.bb919725.js.map"}